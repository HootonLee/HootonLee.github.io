<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Swagger</title>
    <url>/HootonLee.github.io/2020/02/27/Swagger/</url>
    <content><![CDATA[<h2 id="1-Swagger介绍"><a href="#1-Swagger介绍" class="headerlink" title="1. Swagger介绍"></a>1. Swagger介绍</h2><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。</p>
<h6 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h6><ol>
<li>接口的文档在线自动生成。</li>
<li>功能测试。</li>
</ol>
<h6 id="Swagger是一组开源项目，其中主要要项目如下："><a href="#Swagger是一组开源项目，其中主要要项目如下：" class="headerlink" title="Swagger是一组开源项目，其中主要要项目如下："></a>Swagger是一组开源项目，其中主要要项目如下：</h6><ol>
<li><strong>Swagger-tools:</strong> 提供各种与Swagger进行集成和交互的工具。例如模式检验、Swagger 1.2文档转换成Swagger 2.0文档等功能。</li>
<li><strong>Swagger-core:</strong>  用于Java/Scala的的Swagger实现。与JAX-RS(Jersey、Resteasy、CXF…)、Servlets和Play框架进行集成。</li>
<li><strong>Swagger-js:</strong> 用于JavaScript的Swagger实现。</li>
<li><strong>Swagger-node-express:</strong> Swagger模块，用于node.js的Express web应用框架。</li>
<li><strong>Swagger-ui：</strong> 一个无依赖的HTML、JS和CSS集合，可以为Swagger兼容API动态生成优雅文档。</li>
<li><strong>Swagger-codegen：</strong> 一个模板驱动引擎，通过分析用户Swagger资源声明以各种语言生成客户端代码。<h2 id="2-Maven导入依赖"><a href="#2-Maven导入依赖" class="headerlink" title="2. Maven导入依赖"></a>2. Maven导入依赖</h2>版本号请根据实际情况自行更改。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<h2 id="3-创建Swagger配置类"><a href="#3-创建Swagger配置类" class="headerlink" title="3. 创建Swagger配置类"></a>3. 创建Swagger配置类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.swagger.config;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Swagger2配置类</span></span><br><span class="line"><span class="comment"> * 在与SpringBoot集成时,通过<span class="doctag">@Configuration</span>注解,让Spring来加载该类配置.</span></span><br><span class="line"><span class="comment"> * 再通过<span class="doctag">@EnableSwagger</span>2注解来启用Swagger2.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Config</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置Swagger Docket的bean实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		* 设置Swagger在生产环境中使用，在发布..环境不使用</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">		<span class="comment">//设置要显示 Swagger环境</span></span><br><span class="line">		Profiles profiles = Profiles.of(<span class="string">"dev"</span>);</span><br><span class="line">		<span class="comment">//通过environment.acceptsProfiles判断是否处在自己设置的环境中</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = environment.acceptsProfiles(profiles);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                <span class="comment">//配置Api文档的分组  ??? 如何配置多个分组, 配置多个Docket实例即可 </span></span><br><span class="line">                .groupName(<span class="string">"xxxx"</span>)</span><br><span class="line">                .enable(flag) <span class="comment">// enable 指是否启动Swagger，为false 则Swagger不能再浏览器中访问</span></span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//RequestHandlerSelectors , 配置要扫描接口的方式</span></span><br><span class="line">                <span class="comment">//basePackage: 指定要扫描的包</span></span><br><span class="line">                <span class="comment">//any(): 扫描全部</span></span><br><span class="line">                <span class="comment">//none(): 不扫描</span></span><br><span class="line">                <span class="comment">//withClassAnnotation: 扫描类上的注解，参数是一个注解的反射对象</span></span><br><span class="line">                <span class="comment">//withMethodAnnotation: 扫描方法上的注解</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.test.swagger.controller"</span>))</span><br><span class="line">                <span class="comment">//paths() 过滤什么路径</span></span><br><span class="line">                <span class="comment">//.paths(PathSelectors.ant(/xxx))</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建该API的基本信息（这些基本信息会展现在文档页面中）</span></span><br><span class="line"><span class="comment">     * 访问地址：http://项目实际地址/swagger-ui.html</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//额外信息</span></span><br><span class="line">    Contact contact = <span class="keyword">new</span> Contact(<span class="string">"NAME"</span>,<span class="string">"URL"</span>,<span class="string">"EMAIL"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder(</span><br><span class="line">                title:<span class="string">"SpringBoot中使用Swagger2构建RESTful APIs"</span>,</span><br><span class="line">                description:<span class="string">"xxxxINFOxxxxxx"</span>,</span><br><span class="line">                version:<span class="string">"1.0"</span>,</span><br><span class="line">                termsOfServiceUrl:<span class="string">"xxxxURLxxxxxx"</span>,</span><br><span class="line">                contact,</span><br><span class="line">                license:<span class="string">"Apache 2.0"</span>,</span><br><span class="line">                licenseUrl:<span class="string">"http://www.apache.org/licenses/LICENSE-2.0"</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList()</span><br><span class="line">      	);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4：丰富文档内容"><a href="#4：丰富文档内容" class="headerlink" title="4：丰富文档内容"></a>4：丰富文档内容</h2><h6 id="Swagger使用的注解及其说明："><a href="#Swagger使用的注解及其说明：" class="headerlink" title="Swagger使用的注解及其说明："></a>Swagger使用的注解及其说明：</h6>@Api：用在类上来说明该类的作用</li>
</ol>
<p>@ApiOperation：给方法添加说明</p>
<p>@ApiImplicitParams : 在方法上包含一组参数说明</p>
<p>@ApiImplicitParam：给方法入参增加说明</p>
<p>@ApiResponses：用于表示一组响应</p>
<p>@ApiResponse：用在@ApiResponses中，一般用于表达一个错误的响应信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code：数字，例如400</span><br><span class="line"></span><br><span class="line">message：信息，例如&quot;请求参数没填好&quot;</span><br><span class="line"></span><br><span class="line">response：抛出异常的类</span><br></pre></td></tr></table></figure>
<p>@ApiModel：描述一个Model的信息</p>
<p>@ApiModelProperty：描述一个model的属性</p>
<h2 id="5-简单的UI"><a href="#5-简单的UI" class="headerlink" title="5. 简单的UI"></a>5. 简单的UI</h2><p>来自官网,与实际访问有差距<br><img src="https://img-blog.csdnimg.cn/2020022223184555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTk0MjgxNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><h4 id="1-以上Swagger注解给一些难理解的属性或者接口，添加注释信息"><a href="#1-以上Swagger注解给一些难理解的属性或者接口，添加注释信息" class="headerlink" title="1. 以上Swagger注解给一些难理解的属性或者接口，添加注释信息"></a>1. 以上Swagger注解给一些难理解的属性或者接口，添加注释信息</h4><h4 id="2-接口文档实时更新"><a href="#2-接口文档实时更新" class="headerlink" title="2. 接口文档实时更新"></a>2. 接口文档实时更新</h4><h4 id="3-可以在线测试"><a href="#3-可以在线测试" class="headerlink" title="3.可以在线测试"></a>3.可以在线测试</h4><p><strong>[ 在正式发布时，要关闭Swagger ! 处于安全 也节省运行内存]</strong></p>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
      <tags>
        <tag>技术分享</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello,World!</title>
    <url>/HootonLee.github.io/2020/02/26/hello-world/</url>
    <content><![CDATA[<hr>
<h1 id="初来乍到-记录这一次美好的经历"><a href="#初来乍到-记录这一次美好的经历" class="headerlink" title="初来乍到,记录这一次美好的经历"></a>初来乍到,记录这一次美好的经历</h1><p>​        拥有了属于自己独特的记录方式，生活积累的心得和丰富了自己的条条框框有了落脚的地方。搭建成功了自己的博客现在不知道写点什么，欠下一次分享就先把我的脚印留在美好的岁月里。</p>
<blockquote>
<p>​    这是我的CSDN博客链接 :  <a href="https://blog.csdn.net/weixin_45942815" target="_blank" rel="noopener">传送门在这里哦~</a></p>
</blockquote>
<hr>
<p><img src="/images/helloworld.jpg" alt=""></p>
]]></content>
      <categories>
        <category>你好,世界!</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>你好,世界！</tag>
      </tags>
  </entry>
</search>
